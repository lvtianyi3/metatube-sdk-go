name: Publish Docker Image

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}
          
          
       # Extract metadata (tags, labels) for Docker
       # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}   

      - name: Get Version
        id: shell
        run: |
          echo "version=$(git describe --abbrev=0 --tags HEAD | cut -d'v' -f 2)" >> $GITHUB_OUTPUT

      - name: Build and Push (dev)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            lvtianyi3/metatube-sdk-go:latest
            ghcr.io/lvtianyi3/metatube-sdk-go:dev
          cache-from: type=gha
          cache-to: type=gha,mode=max


      - name: Build and Push (latest)
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            lvtianyi3/metatube-sdk-go:latest
            lvtianyi3/metatube-sdk-go:${{ steps.shell.outputs.version }}
            ghcr.io/lvtianyi3/metatube-sdk-go:latest
            ghcr.io/lvtianyi3/metatube-sdk-go:${{ steps.shell.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
